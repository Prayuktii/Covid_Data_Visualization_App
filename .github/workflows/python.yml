name: Python CI
on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [ released ]

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files

  test-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install wheel
        pip install -r requirements.txt
      env:
        PIP_USE_MIRRORS: true
    - name: Run app in docker
      run: |
        docker-compose up -d
        docker-compose ps
    - name: Test running app
      run: |
        curl http://localhost:5000

  deploy-docker:
    runs-on: ubuntu-latest
    needs:
      - linting
      - test-app
    steps:
      - uses: actions/checkout@v3
      - uses: docker/build-push-action@v2
      - name: DockerHub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/covid19:latest



